{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/tasks/task.model.ts","webpack:///src/app/tasks/tasks-add/tasks-add.component.ts","webpack:///src/app/tasks/tasks-add/tasks-add.component.html","webpack:///src/app/tasks/tasks-list/task.service.ts","webpack:///src/app/tasks/tasks-list/tasks-list.component.ts","webpack:///src/app/tasks/tasks-list/tasks-list.component.html","webpack:///src/app/tasks/tasks.component.ts","webpack:///src/app/tasks/tasks.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Task","name","completed","dueDate","TasksAddComponent","taskService","addTaskValue","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","event","task","target","value","getTodayAsString","addTask","subscribe","newTask","onTaskAdded","emit","console","log","onTaskAdd","TaskService","http","get","pipe","response","checked","post","providedIn","TasksListComponent","tasks","getTask","error","push","saveTask","TasksComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<div class=\"container\">\n    <app-tasks></app-tasks>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TasksListComponent } from './tasks/tasks-list/tasks-list.component';\nimport { TasksAddComponent } from './tasks/tasks-add/tasks-add.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TaskService } from './tasks/tasks-list/task.service';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    TasksListComponent,\n    TasksAddComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    TaskService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Task {\n    public id: number;\n    public name: string;\n    public completed: boolean;\n    public dueDate: string;\n\n    constructor(name: string, completed: boolean, dueDate: string) {\n        this.name = name;\n        this.completed = completed;\n        this.dueDate = dueDate;\n    }\n    \n}","import { Component, OnInit, Output } from '@angular/core';\nimport { TaskService } from '../tasks-list/task.service';\nimport { Task } from '../task.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-tasks-add',\n  templateUrl: './tasks-add.component.html',\n  styleUrls: ['./tasks-add.component.css']\n})\nexport class TasksAddComponent implements OnInit {\n\n  addTaskValue: string = null;\n\n  constructor(private taskService: TaskService ) { }\n\n  ngOnInit(): void {\n  }\n\n  getTodayAsString() {\n    let today = new Date();\n    let dd: any = today.getDate();\n    let mm: any = today.getMonth();\n    let yyyy: any = today.getFullYear();\n\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n\n    return mm + '/' + dd + '/' + yyyy;\n  };\n\n  onTaskAdd(event) {\n    let task: Task = new Task((<HTMLInputElement>event.target).value, false, this.getTodayAsString());\n      this.taskService.addTask(task)\n        .subscribe(\n          (newTask: Task) => {\n            this.addTaskValue = '';\n            this.taskService.onTaskAdded.emit(newTask);\n            console.log(newTask);\n          }          \n        )\n        \n  };\n\n}\n","<div class=\"form-group\">\n    <input type=\"text\"\n           class=\"form-control\"\n           placeholder=\"Add New Task\"\n           (keyup.enter)=\"onTaskAdd($event)\"\n           [(ngModel)]=\"addTaskValue\"/>\n</div>\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Task } from '../task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  onTaskAdded = new EventEmitter<Task>();\n\n  constructor(private http: HttpClient) { }\n\n  getTask(): Observable<any> {\n    return this.http.get('/api/tasks')\n      .pipe(\n        map((response: any) => response)\n      );\n\n  }\n\n  saveTask(task: Task, checked: boolean) {\n    task.completed = checked;\n    return this.http.post('/api/tasks/save', task)\n        .pipe(\n            map(\n                (response: Response) => {\n                    return response;\n                }\n            )\n        );\n  }\n\n  addTask(task: Task) {\n    return this.http.post('api/tasks/save', task)\n        .pipe(\n            map(\n                response => response\n            )\n        );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../task.model';\nimport { TaskService } from './task.service';\n\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.css']\n})\nexport class TasksListComponent implements OnInit {\n\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit() {\n      this.taskService.getTask()\n          .subscribe(\n              (tasks: any[]) => {\n                this.tasks = tasks\n              },\n              (error) => console.log(error)\n            );\n            this.taskService.onTaskAdded.subscribe(\n                (task: Task) => this.tasks.push(task)\n            );\n  }\n\n  getDueDateLabel(task: Task) {\n    return task.completed ? 'bg-success' : 'bg-primary';\n  }\n\n  onTaskChange(event, task) {\n    this.taskService.saveTask(task, event.target.checked).subscribe();\n  }\n\n}\n","<ul class=\"list-group\">\n    <li *ngFor=\"let task of tasks\" class=\"list-group-item\">\n        <div class=\"task-checkbox\">\n            <input type=\"checkbox\"\n                   class=\"list-child\"\n                   (change)=\"onTaskChange($event, task)\"\n                   [checked]=\"task.completed\">\n            <span ngClass=\"{{ task.completed ? 'name completed' : 'name' }}\">{{ task.name }}</span>\n            <span class=\"label {{ getDueDateLabel(task) }} float-right text-white\">{{ task.dueDate | date }}</span>\n        </div>\n    </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-2\">&nbsp;</div>\n    <div class=\"col-md-8\">\n        <div id=\"tasksPanel\" class=\"card\">\n            <div class=\"card-header\">\n                <h3 class=\"card-title\">Angular 9 Java Developers Tasks</h3>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <app-tasks-add></app-tasks-add>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <app-tasks-list></app-tasks-list>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-2\">&nbsp;</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}